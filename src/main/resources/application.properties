spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/${POSTGRES_DB:digibooking}}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${POSTGRES_USER:postgres}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${POSTGRES_PASSWORD:P4ssword!}}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10

# spring.cloud.config.server.git.uri=https://github.com/barcazo/config-repo
# spring.cloud.config.server.git.clone-on-start=true
# spring.cloud.config.server.git.default-label=main

spring.profiles.active=native
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.liquibase.change-log=classpath\:domain/changelog-master.yml
spring.liquibase.drop-first=false
error.handling.http-status-in-json-response=true
error.handling.exception-logging=NO_LOGGING
error.handling.full-stacktrace-http-statuses=5xx
error.handling.log-levels.5xx=ERROR
error.handling.http-statuses.org.springframework.security.authorization.AuthorizationDeniedException=unauthorized
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http\://localhost\:8085/realms/digi-id/protocol/openid-connect/certs
spring.docker.compose.lifecycle-management=start-only
management.endpoints.web.exposure.include=info,health,auditevents
management.endpoint.health.show-details=always
springdoc.pathsToMatch=/api/v1/home, /api/v1/**
